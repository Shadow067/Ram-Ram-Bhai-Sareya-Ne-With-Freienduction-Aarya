Spiral Matrix

class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        int left = 0, top = 0, right = matrix[0].size() - 1, bottom = matrix.size() - 1;

        vector<int> v;
        while(left<=right&&top<=bottom)
        {
        for(int i = left; i<=right; i++)
        {
            v.push_back(matrix[top][i]);
        }
        top++;

        for(int i = top; i<=bottom; i++)
        {
            v.push_back(matrix[i][right]);
        }
        right--;
       
        if (top<=bottom)
        {
        for(int i = right; i>=left; i--)
        {
            v.push_back(matrix[bottom][i]);
        }
        bottom--;
        }

        if(left<=right)
        {
        for(int i = bottom; i>=top; i--)
        {
            v.push_back(matrix[i][left]);
        }
        left++;
        }
        }
    return v;
    }
};



Subarray Sum Equals K


class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
        int n=nums.size();
        int a[n];
        int count=0;
        a[0]=nums[0];
        if(k==a[0])
        {
            count++;
        }
        for(int i=1; i<n; i++)
        {
            a[i]=a[i-1]+nums[i];
            if(a[i]==k)
            {
                count++;
            }
        
        }
        for(int i=1; i<n; i++)
        {
            for(int j=0; j<i; j++)
            {
               if(a[i]-a[j]==k)
               {
                   count++;
               }
            }
        }
        return count;
    }
};






